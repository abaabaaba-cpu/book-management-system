<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo1.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="com.example.demo1.model.Book">
    <id column="bookid" jdbcType="INTEGER" property="bookid" />
    <result column="bookname" jdbcType="VARCHAR" property="bookname" />
    <result column="remain" jdbcType="INTEGER" property="remain" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="press" jdbcType="VARCHAR" property="press" />
    <result column="publicationDate" jdbcType="DATE" property="publicationdate" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="clcnum" jdbcType="VARCHAR" property="clcnum" />
  </resultMap>
  <sql id="Base_Column_List">
    bookid, bookname, remain, author, press, publicationDate, version, language, category, 
    introduction, clcnum
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where bookid = #{bookid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from book
  </select>
  <select id="$selectByCategory" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from book
    where category = #{category,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where bookid = #{bookid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo1.model.Book">
    insert into book (bookid, bookname, remain, 
      author, press, publicationDate, 
      version, language, category, 
      introduction, clcnum)
    values (#{bookid,jdbcType=INTEGER}, #{bookname,jdbcType=VARCHAR}, #{remain,jdbcType=INTEGER}, 
      #{author,jdbcType=VARCHAR}, #{press,jdbcType=VARCHAR}, #{publicationdate,jdbcType=DATE}, 
      #{version,jdbcType=INTEGER}, #{language,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{clcnum,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo1.model.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookid != null">
        bookid,
      </if>
      <if test="bookname != null">
        bookname,
      </if>
      <if test="remain != null">
        remain,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="press != null">
        press,
      </if>
      <if test="publicationdate != null">
        publicationDate,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="clcnum != null">
        clcnum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookid != null">
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="bookname != null">
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="remain != null">
        #{remain,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="press != null">
        #{press,jdbcType=VARCHAR},
      </if>
      <if test="publicationdate != null">
        #{publicationdate,jdbcType=DATE},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="clcnum != null">
        #{clcnum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo1.model.Book">
    update book
    <set>
      <if test="bookname != null">
        bookname = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="remain != null">
        remain = #{remain,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="press != null">
        press = #{press,jdbcType=VARCHAR},
      </if>
      <if test="publicationdate != null">
        publicationDate = #{publicationdate,jdbcType=DATE},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="clcnum != null">
        clcnum = #{clcnum,jdbcType=VARCHAR},
      </if>
    </set>
    where bookid = #{bookid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo1.model.Book">
    update book
    set bookname = #{bookname,jdbcType=VARCHAR},
      remain = #{remain,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      press = #{press,jdbcType=VARCHAR},
      publicationDate = #{publicationdate,jdbcType=DATE},
      version = #{version,jdbcType=INTEGER},
      language = #{language,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      clcnum = #{clcnum,jdbcType=VARCHAR}
    where bookid = #{bookid,jdbcType=INTEGER}
  </update>
</mapper>